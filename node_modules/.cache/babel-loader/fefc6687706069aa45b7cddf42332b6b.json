{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/yana/todolist/todo/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\n\nfunction Todo({\n  todo,\n  index,\n  completeTodo\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    style: {\n      textDecoration: todo.isCompleted ? \"line-through\" : \"\"\n    },\n    children: [todo.text, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => completeTodo(index),\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), \"// FUNCTIONALITY TO DELETE ITEMS\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeTodo(index),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Todo;\n\nfunction TodoForm({\n  addTodo\n}) {\n  _s();\n\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      value: value,\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\n_c2 = TodoForm;\n\nfunction App() {\n  _s2();\n\n  const [todos, setTodos] = React.useState([{\n    text: \"Learn about React\",\n    isCompleted: false\n  }, {\n    text: \"Meet friend for lunch\",\n    isCompleted: false\n  }, {\n    text: \"Build really cool todo app\",\n    isCompleted: false\n  }]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  }; // FUNCTIONALITY TO DELETE ITEMS\n  // const removeTodo = index => {\n  //   const newTodos = [...todos];\n  //   newTodos.splice(index, 1);\n  //   setTodos(newTodos);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [todos.map((todo, index) => /*#__PURE__*/_jsxDEV(Todo, {\n        index: index,\n        todo: todo,\n        completeTodo: completeTodo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"YEanbOKSNYk7HfbE8m94qQpC5UU=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Todo\");\n$RefreshReg$(_c2, \"TodoForm\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/yana/todolist/todo/src/App.js"],"names":["React","Todo","todo","index","completeTodo","textDecoration","isCompleted","text","removeTodo","TodoForm","addTodo","value","setValue","useState","handleSubmit","e","preventDefault","target","App","todos","setTodos","newTodos","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction Todo({ todo, index, completeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n    >\n      {todo.text}\n      <div>\n        <button onClick={() => completeTodo(index)}>Complete</button>\n       \n        // FUNCTIONALITY TO DELETE ITEMS\n        <button onClick={() => removeTodo(index)}>x</button>\n      </div>\n    </div>\n  );\n}\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = React.useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: false\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false\n    },\n    {\n      text: \"Build really cool todo app\",\n      isCompleted: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  // FUNCTIONALITY TO DELETE ITEMS\n\n  // const removeTodo = index => {\n  //   const newTodos = [...todos];\n  //   newTodos.splice(index, 1);\n  //   setTodos(newTodos);\n  // };\n\n  return (\n    <div className=\"app\">\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n          />\n        ))}\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}